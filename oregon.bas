   REM ***********************************************
   REM This is a adaptation of the original program to
   REM compile in Boriel's Basic Compiler
   REM for the ZX Spectrum
   REM by Alvaro Alea (2019, MAY 4)
   REM by the way, I translate it to Spanish
   REM ***********************************************

#include <input.bas>
#ifndef LANG
#define LANG es
#endif
#if LANG==en
#include "english.bas"
#endif
#if LANG==es
#include "spanish.bas"
#endif

10 REM PROGRAM NAME - OREGON        VERSION:01/01/78
20 REM ORIGINAL PROGRAMMING BY BILL HEINEMANN - 1971
30 REM SUPPORT RESEARCH AND MATERIALS BY DON RAVITSCH,
40 REM      MINNESOTA EDUCATIONAL COMPUTING CONSORTIUM STAFF
50 REM CDC CYBER 70/73-26     BASIC 3.1
60 REM DOCUMENTATION BOOKLET 'OREGON' AVAILABLE FROM
61 REM    MECC SUPPORT SERVICES
62 REM    2520 BROADWAY DRIVE
63 REM    ST. PAUL MN 55113
80 REM
   REM ========================================================
   REM NOTE 1 = MODIFIED BY CHRISTOPHER PEDERSEN (AUG 10, 2018)
   REM FOR COMPATIBILITY WITH THE CHIPMUNK BASIC INTERPRETER
   REM CHIPMUNK BASIC: http://www.nicholson.com/rhn/basic/
   REM ========================================================


 REM ***IDENTIFICATION OF VARIABLES IN THE PROGRAM***
 DIM A as Integer : REM = AMOUNT SPENT ON ANIMALS
 DIM B as Integer : REM  = AMOUNT SPENT ON AMMUNITION
 DIM B1 as Float : REM = ACTUAL RESPONSE TIME FOR INPUTTING "BANG"
 DIM B2 as Float : REM = CLOCK TIME AT END OF INPUTTING "BANG"
 DIM B3 as Float : REM = CLOCK TIME AT START OF INPUTTING "BANG"
 DIM C as Integer : REM  = AMOUNT SPENT ON CLOTHING
 DIM C1 as uByte : REM = FLAG FOR INSUFFICIENT CLOTHING IN COLD WEATHER
 REM Z$ = YES/N0 RESPONSE TO QUESTIONS
 REM D1 = COUNTER IN GENERATING EVENTS
 REM D3 = TURN NUMBER FOR SETTING DATE
 REM D4 = CURRENT DATE
 DIM D9 as uByte : REM = CHOICE OF SHOOTING EXPERTISE LEVEL
 DIM E as uByte : REM = CHOICE OF EATING
 DIM F as Integer : REM  = AMOUNT SPENT ON FOOD
 DIM F1 as uByte : REM = FLAG FOR CLEARING SOUTH PASS
 DIM F2 as uByte : REM = FLAG FOR CLEARING BLUE MOUNTAINS
 REM F9 = FRACTION OF 2 WEEKS TRAVELED ON FINAL TURN
 DIM K8 as uByte : REM = FLAG FOR INJURY
 DIM L1 as uByte : REM = FLAG FOR BLIZZARD
 DIM M as uInteger : REM = TOTAL MILEAGE WHOLE TRIP
 DIM M1 as Integer : REM  = AMOUNT SPENT ON MISCELLANEOUS SUPPLIES
 REM M2 = TOTAL MILEAGE UP THROUGH PREVIOUS TURN
 DIM M9 as uByte : REM = FLAG FOR CLEARING SOUTH PASS IN SETTING MILEAGE
 REM P = AMOUNT SPENT ON ITEMS AT FORT
 REM R1 = RANDOM NUMBER IN CHOOSING EVENTS
 REM S4 = FLAG FOR ILLNESS
 REM S5 = ""HOSTILITY OF RIDERS"" FACTOR
 REM S6 = SHOOTING WORD SELECTOR
 REM S$ = VARIATIONS OF SHOOTING WORD
 DIM T as Integer : REM  = CASH LEFT OVER AFTER INITIAL PURCHASES
 DIM T1 as uByte : REM = CHOICE OF TACTICS WHEN ATTACKED
 DIM X as uByte : REM = CHOICE OF ACTION FOR EACH TURN
 DIM X1 as uByte : REM = FLAG FOR FORT OPTION155 REM
 DIM datap1 as uInteger : REM Boriel's basic not have READ/DATA
 DIM mes$ as String
 DIM temp1 as Float
 DIM temp2 as Float
    BORDER 0: INK 7: PAPER 0: CLS
160 PRINT S_NEED_INST ;
170 REM DIM C$(5)
180 REM RANDOMIZE REMOVED
190 Z$=INPUT(1)
200 IF (Z$="N") THEN GOTO 690: end if
    IF (Z$="n") THEN GOTO 690: end if
210 PRINT
220 PRINT

230 REM ***INSTRUCTIONS********************
240 PRINT S_I_001
    PRINT S_I_002
250 PRINT S_I_003
    PRINT S_I_004
    PRINT S_I_005
260 PRINT S_I_006
    PRINT S_I_007
270 PRINT S_I_008
    PRINT S_I_009
280 PRINT
290 PRINT S_I_010
300 PRINT S_I_011
    GOSUB 7000
310 PRINT S_I_012
    PRINT S_I_013
320 PRINT S_I_014
340 PRINT S_I_015
    PRINT S_I_016
350 PRINT S_I_017
360 PRINT S_I_018
    PRINT S_I_019
380 PRINT S_I_020
    PRINT S_I_021
390 PRINT S_I_022
410 PRINT S_I_023
    PRINT S_I_024
420 PRINT S_I_025
    PRINT S_I_026
430 PRINT S_I_027
450 PRINT S_I_028
    PRINT S_I_029
460 PRINT S_I_030
    PRINT S_I_031
    PRINT S_I_032
    GOSUB 7000
490 PRINT S_I_033
    PRINT S_I_034
500 PRINT S_I_035
    PRINT S_I_036
    PRINT S_I_037
530 PRINT
540 PRINT S_I_038
    PRINT S_I_039
550 PRINT S_I_040
    PRINT S_I_041
560 PRINT S_I_042
    PRINT S_I_043
570 PRINT S_I_044
    PRINT S_I_045
580 PRINT S_I_046
    PRINT
    GOSUB 7000
590 PRINT S_I_047
    PRINT S_I_048
600 PRINT S_I_049
    PRINT S_I_050
610 PRINT S_I_051
    PRINT S_I_052
620 PRINT S_I_053
    PRINT S_I_054
630 PRINT
    GOSUB 7000
640 PRINT S_I_055
    PRINT S_I_056
650 PRINT S_I_057
660 PRINT S_I_058
    PRINT S_I_059
670 PRINT
680 PRINT S_I_060
    GOSUB 7000

690 CLS
700 PRINT
710 PRINT S_ACE_01
    PRINT S_ACE_02
    PRINT
720 PRINT S_ACE_03
    PRINT S_ACE_04
    PRINT S_ACE_05
730 PRINT S_ACE_06
    PRINT S_ACE_07
    PRINT 
740 PRINT S_ACE_08
    PRINT S_ACE_09
750 PRINT S_ACE_10
    PRINT S_ACE_11
760 Z$=INPUT(1)
    D9 = VAL(Z$)
770 IF D9>5 THEN GOTO 790: end if
780 GOTO 810
    REM I think that is 6 not 0
790 D9=6
800 REM ***INITIAL PURCHASES***
810 X1=-1
820 REM LINES 820-829 NOTE 1
823 D3=0
824 M9=0
825 M=0
826 F2=0
827 F1=0
828 S4=0
829 K8=0
830 CLS
850 PRINT S_HOW_MUCH_OX
860 Z$=INPUT(3)
    A=VAL(Z$)
    PRINT A
870 IF A >= 200 THEN GOTO 900: end if
880 PRINT S_NOT_ENOUGHT
890 GOTO 850
900 IF A <= 300 THEN GOTO 930: end if
910 PRINT S_TOO_MUCH
920 GOTO 850
930 PRINT S_HOW_MUCH_FOOD
940 Z$=INPUT(3)
    F=VAL(Z$)
    PRINT F
950 IF F >= 0 THEN GOTO 980: end if
960 PRINT S_IMPOSSIBLE
970 GOTO 930
980 PRINT S_HOW_MUCH_BULLET
990 Z$=INPUT(3)
    B=VAL(Z$)
    PRINT B
1000 IF B >= 0 THEN GOTO 1030: end if
1010 PRINT S_IMPOSSIBLE
1020 GOTO 980
1030 PRINT S_HOW_MUCH_CLOTHES
1040 Z$=INPUT(3)
     C=VAL(Z$)
     PRINT C
1050 IF C >= 0 THEN GOTO 1080: end if
1060 PRINT S_IMPOSSIBLE
1070 GOTO 1030
1080 PRINT S_HOW_MUCH_OTHERS
1090 Z$=INPUT(3)
     M1=VAL(Z$)
     PRINT M1
1100 IF M1 >= 0 THEN GOTO 1130: end if
1110 PRINT S_IMPOSSIBLE
1120 GOTO 1080
1130 T=700-A-F-B-C-M1
1140 IF T >= 0 THEN GOTO 1170: end if
1150 PRINT S_SPEND_MUCH_1
     PRINT S_SPEND_MUCH_2
     PRINT S_SPEND_MUCH_3
     GOSUB 7000
1160 GOTO 830
1170 B=50*B
1180 PRINT S_AFTER_BUY_1
     PRINT S_AFTER_BUY_2 ; T ; 
     PRINT S_AFTER_BUY_3
     GOSUB 7000
1190 PRINT
1200 PRINT S_FIRST_DATE
1210 PRINT
1220 GOTO 1750

1230 IF M >= 2040 THEN GOTO 5430:end if
1240 REM ***SETTING DATE***
1250 D3=D3+1
1260 PRINT
1270 PRINT S_MONDAY ;
1280 REM IF D3>10 THEN GOTO 1300: end if
1290 ON D3-1 GOTO 1310, 1330, 1350, 1370, 1390, 1410, 1430, 1450, 1470, 1490,   1510, 1530, 1550, 1570, 1590, 1610, 1630, 1650, 1670, 1690
1300 REM ON D3-10 GOTO 1510, 1530, 1550, 1570, 1590, 1610, 1630, 1650, 1670, 1690
1310 PRINT S_04_12 ;
1320 GOTO 1720
1330 PRINT S_04_26 ;
1340 GOTO 1720
1350 PRINT S_05_10 ;
1360 GOTO 1720
1370 PRINT S_05_24 ;
1380 GOTO 1720
1390 PRINT S_06_07 ;
1400 GOTO 1720
1410 PRINT S_06_21 ;
1420 GOTO 1720
1430 PRINT S_07_05 ;
1440 GOTO 1720
1450 PRINT S_07_19 ;
1460 GOTO 1720
1470 PRINT S_08_02 ;
1480 GOTO 1720
1490 PRINT S_08_16 ;
1500 GOTO 1720
1510 PRINT S_08_31 ;
1520 GOTO 1720
1530 PRINT S_09_13 ;
1540 GOTO 1720
1550 PRINT S_09_27 ;
1560 GOTO 1720
1570 PRINT S_10_11 ;
1580 GOTO 1720
1590 PRINT S_10_25 ;
1600 GOTO 1720
1610 PRINT S_11_08 ;
1620 GOTO 1720
1630 PRINT S_11_22 ;
1640 GOTO 1720
1650 PRINT S_12_06 ;
1660 GOTO 1720
1670 PRINT S_12_20 ;
1680 GOTO 1720
1690 PRINT S_TRAIL_TOO_LONG
1700 PRINT S_FAMILY_DIES
1710 GOTO 5170
1720 PRINT S_YEAR
1730 PRINT

1740 REM ***BEGINNING EACH TURN***

1750 IF F >= 0 THEN GOTO 1770: end if
1760 F=0
1770 IF B >= 0 THEN GOTO 1790: end if
1780 B=0
1790 IF C >= 0 THEN GOTO 1810: end if
1800 C=0
1810 IF M1 >= 0 THEN GOTO 1830: end if
1820 M1=0
1830 IF F >= 13 THEN GOTO 1850: end if
1840 PRINT S_FOOD_LOW
1850 F=INT(F)
1860 B=INT(B)
1870 C=INT(C)
1880 M1=INT(M1)
1890 T=INT(T)
1900 M=INT(M)
1910 M2=M
1920 IF S4=1 THEN GOTO 1950: end if
1930 IF K8=1 THEN GOTO 1950: end if
1940 GOTO 1990
1950 T=T-20
1960 IF T<0 THEN GOTO 5080: end if
1970 PRINT S_BILL_DOCTOR
1980 LET S4=0 : LET K8=S4
1990 IF M9=1 THEN GOTO 2020: end if
2000 PRINT S_TOTAL_MILEAGE ;M
2010 GOTO 2040
2020 PRINT S_TOTAL_MILEAGE ; "950"
2030 M9=0
2040 REM LINES 2040-2050 NOTE 1
2041 PRINT S_FOOD ;F
2042 PRINT S_BULLETS ;B
2043 PRINT S_CLOTHING ;C
2044 PRINT S_MISC_SUPPLIES ;M1
2050 PRINT S_CASH ;T
     PRINT

2060 IF X1=-1 THEN GOTO 2170: end if
2070 X1=X1*(-1)
2080 PRINT S_CHOOSE_12 ;
2090 PRINT S_CHOOSE_3
2100 Z$=INPUT(2)
     X=VAL(Z$)
     PRINT X
2110 REM IF X>2 THEN GOTO 2150: end if
2120 REM IF X<1 THEN GOTO 2150: end if
2130 X=X-1 : REM LET X=INT(X)
2140 GOTO 2270

2150 LET X=3
2160 GOTO 2270

2170 PRINT S_CHOOSE_23
2180 Z$=INPUT(2)
     X=VAL(Z$)
     PRINT X
2190 REM IF X=1 THEN GOTO 2210: end if
2200 REM LET X=2
2210 REM LET X=X+1
2220 IF X=2 THEN GOTO 2260: end if
2230 IF B>39 THEN GOTO 2260: end if
2240 PRINT S_EJEM_BULLETS
2250 X = 2: REM GOTO 2170
2260 X1=X1*(-1)

2270 CLS: ON X GOTO 2280,2530,2720

2280 PRINT S_AT_FORT
2290 PRINT S_ENTER_HOW_MUCH
2300 PRINT S_FOOD ;
2310 GOSUB 2330
2320 GOTO 2410
2330 Z$=INPUT(3)
     P=VAL(Z$)
     PRINT P
2340 IF P<0 THEN GOTO 2400: end if
2350 T=T-P
2360 IF T >= 0 THEN GOTO 2400: end if
2370 PRINT S_DONT_HAVE_SUCH
2380 T=T+P
2390 P=0
2400 RETURN
2410 F=F+2/3*P
2420 PRINT S_AMMUNITION ;
2430 GOSUB 2330
2440 LET B=INT(B+2/3*P*50)
2450 PRINT S_CLOTHING ;
2460 GOSUB 2330
2470 C=C+2/3*P
2480 PRINT S_MISC_SUPPLIES ;
2490 GOSUB 2330
2500 M1=M1+2/3*P
2510 M=M-45
2520 GOTO 2720

2530 PRINT 
     PRINT S_HUNTING
2540 IF B>39 THEN GOTO 2570: end if
2550 PRINT S_EJEM_BULLETS
2560 GOTO 2080
2570 M=M-45
2580 GOSUB 6140
2590 IF B1 <= 1 THEN GOTO 2660: end if
     REM FIXME: The next RND not seen to be good
2600 IF 100*RND()<13*B1 THEN GOTO 2710: end if
2610 F=F+48-2*B1
2620 PRINT S_HUNT_1
2630 B=B-10-3*B1
2640 GOTO 2720
2650 REM **BELLS IN LINE 2660**
2660 PRINT S_HUNT_2
2670 PRINT S_HUNT_3
2680 F=F+52+RND()*6
2690 B=B-10-RND()*4
2700 GOTO 2720
2710 PRINT S_HUNT_4

2720 IF F >= 13 THEN GOTO 2740: end if
2730 GOTO 5060
2740 PRINT 
     PRINT S_EAT1
2750 PRINT S_EAT2
     PRINT S_EAT3
     PRINT S_EAT4
2760 PRINT S_EAT5 
2770 Z$=INPUT(1)
     E=VAL(Z$)
     PRINT E
2780 IF E>3 THEN GOTO 2750: end if
2790 IF E<1 THEN GOTO 2750: end if
2800 LET E=INT(E)
2810 LET F=F-8-5*E
2820 IF F >= 0 THEN GOTO 2860: end if
2830 F=F+8+5*E
2840 PRINT S_EAT_MUCH
2850 GOTO 2750
2860 LET M=M+200+(A-220)/5+10*RND()
2870 REM LINES 2870-2872 NOTE 1
2871 C1=0
2872 L1=C1

2880 REM ***RIDERS ATTACK***

2889 REM LINE 2890 NOTE 1
2890 temp1=RND()*10
     temp2= (((M/100)-4)^2+72) / (((M/100)-4)^2+12) -1
     IF temp1>temp2 THEN GOTO 3550: end if
2900 PRINT S_RIDERS_01;
2910 S5=0
2919 REM ALL RND(-1) FUNCTION CALLS HAVE BEEN CHANGED TO RND(1) BY C.D.P.
2920 IF RND()<.8 THEN GOTO 2950: end if
2930 PRINT S_RIDERS_02;
2940 S5=1
2950 PRINT S_RIDERS_03
2960 PRINT S_RIDERS_04
2970 PRINT S_RIDERS_05
2980 IF RND()>.2 THEN GOTO 3000: end if
2990 S5=1-S5
3000 Z$=INPUT(3)
     T1 = VAL(Z$)
     PRINT T1
3010 IF T1<1 THEN GOTO 2970: end if
3020 IF T1>4 THEN GOTO 2970: end if
3030 T1=INT(T1)
3040 IF S5=1 THEN GOTO 3330: end if
3050 IF T1>1 THEN GOTO 3110: end if
3060 M=M+20
3070 M1=M1-15
3080 B=B-150
3090 A=A-40
3100 GOTO 3470
3110 IF T1>2 THEN GOTO 3240: end if
3120 GOSUB 6140
3130 B=B-B1*40-80
3140 IF B1>1 THEN GOTO 3170: end if
3150 PRINT S_RIDERS_11
3160 GOTO 3470
3170 IF B1 <= 4 THEN GOTO 3220: end if
3180 PRINT S_RIDERS_12
3190 K8=1
3200 PRINT S_RIDERS_13
3210 GOTO 3470
3220 PRINT S_RIDERS_14
3230 GOTO 3470

3240 IF T1>3 THEN GOTO 3290: end if
3250 IF RND()>0.8 THEN GOTO 3450: end if
3260 LET B=B-150
3270 M1=M1-15
3280 GOTO 3470
3290 GOSUB 6140
3300 B=B-B1*30-80
3310 M=M-25
3320 GOTO 3140
3330 IF T1>1 THEN GOTO 3370: end if
3340 M=M+15
3350 A=A-10
3360 GOTO 3470
3370 IF T1>2 THEN GOTO 3410: end if
3380 M=M-5
3390 B=B-100
3400 GOTO 3470
3410 IF T1>3 THEN GOTO 3430: end if
3420 GOTO 3470
3430 M=M-20
3440 GOTO 3470
3450 PRINT S_RIDERS_21
3460 GOTO 3550
3470 IF S5=0 THEN GOTO 3500: end if
3480 PRINT S_RIDERS_22
3490 GOTO 3550
3500 PRINT S_RIDERS_23
3510 IF B >= 0 THEN GOTO 3550: end if
3520 PRINT S_RIDERS_24
3530 GOTO 5170

3540 REM ***SELECTION OF EVENTS***

REM FIXME: quiza esto deberia ir al final del programa.
dataline1:
ASM
 defb 6,11,13,15,17,22,32,35,37,42,44,54,64,69,95
END ASM

3550 LET D1=0
3560 datap1=@dataline1
3570 R1=100*RND()
3580 LET D1=D1+1
3590 IF D1=16 THEN GOTO 4670: end if
     DIM D as uByte
3600 D=peek datap1 : datap1 = datap1+1
3610 IF R1>D THEN GOTO 3580: end if
     PRINT S_EVENT 
3630 REM IF D1>10 THEN GOTO 3650: end if
3640 ON D1-1 GOTO 3660,3700,3740,3790,3820,3850,3880,3960,4130,4190 ,4220,4290,4340,4560,4610,4670
3650 REM ON D1-11 GOTO 4220,4290,4340,4560,4610,4670

3660 PRINT S_WAGON_BREAK
3670 LET M=M-15-5*RND()
3680 LET M1=M1-8
3690 GOTO 4710

3700 PRINT S_OX_INJURED
3710 LET M=M-25
3720 LET A=A-20
3730 GOTO 4710

3740 PRINT S_BROKE_ARM
3750 PRINT S_MAKE_SLING
3760 M=M-5-4*RND()
3770 M1=M1-2-3*RND()
3780 GOTO 4710

3790 PRINT S_OX_WANDER
3800 M=M-17
3810 GOTO 4710
3820 PRINT S_SON_LOST
3830 M=M-10
3840 GOTO 4710

3850 PRINT S_UNSAFE_WATER
3860 LET M=M-10*RND()-2
3870 GOTO 4710

3880 IF M>950 THEN GOTO 4490: end if
3890 PRINT S_HEAVY_RAINS
3910 F=F-10
3920 B=B-500
3930 M1=M1-15
3940 M=M-10*RND()-5
3950 GOTO 4710

3960 PRINT S_BANDITS_ATTACK
3970 GOSUB 6140
3980 B=B-20*B1
3990 IF B >= 0 THEN GOTO 4030: end if
4000 PRINT S_OUT_BULLETS
4010 T=T/3
4020 GOTO 4040
4030 IF B1 <= 1 THEN GOTO 4100: end if
4040 PRINT S_SHOT_LEG
4050 K8=1
4060 PRINT S_BETTER_SEE_DOC
4070 M1=M1-5
4080 A=A-20
4090 GOTO 4710

4100 PRINT S_QUICKY
4110 PRINT S_GOT_EM
4120 GOTO 4710

4130 PRINT S_WAGON_FIRE
4140 F=F-40
4150 B=B-400
4160 LET M1=M1-RND()*8-3
4170 M=M-15
4180 GOTO 4710

4190 PRINT S_LOSE_FOG
4200 M=M-10-5*RND()
4210 GOTO 4710

4220 PRINT S_KILL_SNAKE
4230 B=B-10
4240 M1=M1-5
4250 IF M1 >= 0 THEN GOTO 4280: end if
4260 PRINT S_SNAKE_KILL
4270 GOTO 5170
4280 GOTO 4710

4290 PRINT S_WAGON_SWAMPED
4300 F=F-30
4310 C=C-20
4320 M=M-20-20*RND()
4330 GOTO 4710

4340 PRINT S_WILD_ANIMALS
4350 GOSUB 6140
4360 IF B>39 THEN GOTO 4410: end if
4370 PRINT S_LOW_BULLETS
4380 PRINT S_WOLVE_OVER
4390 K8=1
4400 GOTO 5120
4410 IF B1>2 THEN GOTO 4440: end if
4420 PRINT S_NICE_SHOT
4430 GOTO 4450
4440 PRINT S_SLOW_DRAW
4450 B=B-20*B1
4460 C=C-B1*4
4470 F=F-B1*8
4480 GOTO 4710

4490 PRINT S_COLD_WEATHER;
4500 IF C>22+4*RND() THEN GOTO 4530: end if
4510 PRINT S_DONT;
4520 C1=1
4530 PRINT S_NO_CLOTHS
4540 IF C1=0 THEN GOTO 4710: end if
4550 GOTO 6300
4560 PRINT S_HAIL_STORM
4570 M=M-5-RND()*10
4580 B=B-200
4590 M1=M1-4-RND()*3
4600 GOTO 4710

4610 IF E=1 THEN GOTO 6300: end if
4620 IF E=3 THEN GOTO 4650: end if
4630 IF RND()>0.25 THEN GOTO 6300: end if
4640 GOTO 4710
4650 IF RND()<0.5 THEN GOTO 6300: end if
4660 GOTO 4710
4670 PRINT S_HELPFUL_INDIANS
4680 F=F+14
4690 GOTO 4710

4700 REM ***MOUNTAINS***
4710 GOSUB 7000
     IF M <= 950 THEN GOTO 1230: end if
4719 REM LINE 4720 NOTE 1
4720 IF RND()*10>9-((M/100-15)^2+72)/((M/100-15)^2+12) THEN GOTO 4860: end if
4730 PRINT S_RUGGED_M
4740 IF RND()>0.1 THEN GOTO 4780: end if
4750 PRINT S_LOST_TRAIL
4760 M=M-60
4770 GOTO 4860
4780 IF RND()>0.11 THEN GOTO 4840: end if
4790 PRINT S_WAGON_DAMAGED
4800 M1=M1-5
4810 B=B-200
4820 M=M-20-30*RND()
4830 GOTO 4860
4840 PRINT S_GOING_SLOW
4850 M=M-45-RND()/0.02
4860 IF F1=1 THEN GOTO 4900: end if
4870 F1=1
4880 IF RND()<0.8 THEN GOTO 4970: end if
4890 PRINT S_YOU_MADE
4900 IF M<1700 THEN GOTO 4940: end if
4910 IF F2=1 THEN GOTO 4940: end if
4920 F2=1
4930 IF RND()<0.7 THEN GOTO 4970: end if
4940 IF M>950 THEN GOTO 1230: end if
4950 M9=1
4960 GOTO 1230
4970 PRINT S_BLIZZARD
4980 L1=1
4990 F=F-25
5000 M1=M1-10
5010 B=B-300
5020 M=M-30-40*RND()
5030 IF C<18+2*RND() THEN GOTO 6300: end if
5040 GOTO 4940

5050 REM ***DYING***
5060 PRINT S_DIE_NO_FOOD
5070 GOTO 5170
5080 LET T=0
5090 PRINT S_DIE_NO_DOCTOR
5100 GOTO 5120
5110 PRINT S_DIE_NO_MEDICAL
5120 PRINT S_DIE_YOU;
5130 IF K8=1 THEN GOTO 5160: end if
5140 PRINT S_DIE_ILL1
5150 GOTO 5170
5160 PRINT S_DIE_INJURIES
5170 PRINT
     GOSUB 7000
5180 PRINT S_DIE_01
5190 PRINT S_DIE_02
5200 PRINT
5210 PRINT S_DIE_03
5220 Z$=INPUT(3)
     PRINT Z$
5230 PRINT S_DIE_04
5240 Z$=INPUT(3)
     PRINT Z$
5250 PRINT S_DIE_05
5260 Z$=INPUT(3)
     PRINT Z$
5270 IF (Z$<>"no" AND Z$<>"NO") THEN GOTO 5310: end if
5280 PRINT S_DIE_06
5290 PRINT
5300 GOTO 5330
5310 PRINT S_DIE_07     
5320 GOSUB 7000
5330 PRINT S_DIE_08
5340 PRINT S_DIE_09
5350 PRINT S_DIE_10
5360 PRINT
5370 PRINT
5380 PRINT S_DIE_11
5390 PRINT
5400 PRINT S_DIE_12
5409 REM 'STOP' COMMAND BELOW CHANGED TO 'END' BY C.D.P.
5410 GOTO 7100

5420 REM ***FINAL TURN***
5430 F9=(2040-M2)/(M-M2)
5440 F=F+(1-F9)*(8+5*E)
5450 PRINT
5460 REM **BELLS IN LINES 5470,5480**
5470 PRINT S_END1
5480 PRINT S_END2
5490 PRINT S_END3
5500 PRINT
5510 F9=INT(F9*14)
5520 D3=D3*14+F9
5530 F9=F9+1
5540 IF F9<8 THEN GOTO 5560: end if
5550 F9=F9-7
5560 ON F9 GOTO 5570,5590,5610,5630,5650,5670,5690
5570 PRINT S_CMONDAY ;
5580 GOTO 5700
5590 PRINT S_CTUESDAY;
5600 GOTO 5700
5610 PRINT S_CWEDNESDAY;
5620 GOTO 5700
5630 PRINT S_CTHRUSDAY;
5640 GOTO 5700
5650 PRINT S_CFRIDAY;
5660 GOTO 5700
5670 PRINT S_CSATURDAY ;
5680 GOTO 5700
5690 PRINT S_CSUNDAY ;
5700 IF D3>124 THEN GOTO 5740: end if
5710 D3=D3-93
5720 LET mes$= S_CJULY
5730 GOTO 5920
5740 IF D3>155 THEN GOTO 5780: end if
5750 D3=D3-124
5760 LET mes$= S_CAUGUST
5770 GOTO 5920
5780 IF D3>185 THEN GOTO 5820: end if
5790 D3=D3-155
5800 LET mes$= S_CSEPTEMBER
5810 GOTO 5920
5820 IF D3>216 THEN GOTO 5860: end if
5830 D3=D3-185
5840 LET mes$= S_COCTOBER
5850 GOTO 5920
5860 IF D3>246 THEN GOTO 5900: end if
5870 D3=D3-216
5880 LET mes$= S_CNOVEMBER
5890 GOTO 5920
5900 D3=D3-246
5910 LET mes$=S_CDECEMBER
5920
#if LANG==en
     PRINT mes$; D3; S_YEAR
#endif
#if LANG==es
     PRINT D3; mes$; S_YEAR
#endif
     PRINT
5930 REM LINE 5930 NOTE 1
5940 IF B>0 THEN GOTO 5960: end if
5950 LET B=0
5960 IF C>0 THEN GOTO 5980: end if
5970 LET C=0
5980 IF M1>0 THEN GOTO 6000: end if
5990 LET M1=0
6000 IF T>0 THEN GOTO 6020: end if
6010 LET T=0
6020 IF F>0 THEN GOTO 6040: end if
6030 LET F=0
6040 REM LINES 6040-6045 NOTE 1
6041 PRINT S_FOOD ;F
6042 PRINT S_BULLETS ;B
6043 PRINT S_CLOTHING ;C
6044 PRINT S_MISC_SUPPLIES ;M1
6045 PRINT S_CASH ;T
6050 GOSUB 7000
6060 PRINT S_END_01
     PRINT 
     PRINT S_END_02
     PRINT 
     PRINT S_END_03
6070 PRINT S_END_04
6080 PRINT
6090 PRINT S_END_05
     PRINT S_END_06
6100 PRINT
6110 PRINT S_END_07
6120 GOTO 7100

6130 REM ***SHOOTING SUB-ROUTINE***
6131 REM THE METHOD OF TIMING THE SHOOTING (LINES 6210-6240)
6132 REM WILL VARY FROM SYSTEM TO SYSTEM. FOR EXAMPLE, H-P
6133 REM USERS WILL PROBABLY PREFER TO USE THE 'ENTER' STATEMENT.
6134 REM IF TIMING ON THE USER'S SYSTEM IS HIGHLY SUSCEPTIBLE
6135 REM TO SYSTEM RESPONSE TIME, THE FORMULA IN LINE 6240 CAN
6136 REM BE TAILORED TO ACCOMMODATE THIS BY EITHER INCREASING
6137 REM OR DECREASING THE 'SHOOTING' TIME RECORDED BY THE SYSTEM
6140 DIM S$(4)
6150 S$(1)="BANG"
6160 S$(2)="BLAM"
6170 S$(3)="POW"
6180 S$(4)="WHAM"
6190 S6=INT(RND()*4+0.5)
6200 PRINT S_TYPE ; S$(S6)
6206 REM 'CLK(0)' FUNCTION CHANGED TO 'TIMER' BY C.D.P. FOR COMPATIBILITY
6207 REM B3 = TIMER changed to B3 = TIMER + 2 BY C.D.P. TO MAKE HUNTING...
6208 REM ...EASIER ON MODERN COMPUTERS. SEE NOTES FROM ORIGINAL AUTHOR ON
6209 REM ... ON TWEAKING HUNTING DIFFICULTY
6210 B3 = PEEK 23672 + 256*PEEK 23673 + 65536*PEEK 23674
6220 Z$=INPUT(5)
     PRINT Z$
6229 REM 'CLK(0)' FUNCTION CHANGED TO 'TIMER' BY C.D.P. FOR COMPATIBILITY
6230 B2 = PEEK 23672 + 256*PEEK 23673 + 65536*PEEK 23674
6240 B1=(B2-B3) / 50

     REM  - (D9-1)
     PRINT "B3=";B3
     PRINT "B2=";B2
     PRINT "Seconds=";B1
     PRINT "DIFICULT=";D9
     GOSUB 7000
6250 PRINT
6255 IF B1<D9 THEN GOTO 6260: end if
6257 B1=0
6260 IF Z$=S$(S6) THEN GOTO 6280: end if
6270 B1=9
6280 RETURN
     REM so B1 = 0 => to slow
     REM    B1 = 9 => not correct
     REM    1 <= B1 <= 8 diferent quality.

6290 REM ***ILLNESS SUB-ROUTINE***
6300 IF 100*RND()<10+35*(E-1) THEN GOTO 6370: end if
6309 REM LINE 6310 NOTE 1
6310 IF 100*RND()<100-(40/4^(E-1)) THEN GOTO 6410: end if
6320 PRINT S_ILL_SERIOUS
6330 PRINT S_ILL_MEDICAL
6340 M1=M1-10
6350 S4=1
6360 GOTO 6440
6370 PRINT S_ILL_WILD
6380 M=M-5
6390 M1=M1-2
6400 GOTO 6440
6410 PRINT S_ILL_BAD
6420 M=M-5
6430 M1=M1-5
6440 IF M1<0 THEN GOTO 5110: end if
6450 IF L1=1 THEN GOTO 4940: end if
6460 GOTO 4710
6800 END

     REM Routines by Alea not in original

7000 PRINT
7010 PRINT S_PRESS_KEY
7020 WHILE INKEY<>""
     REM WAIT Until the key isn't pressed any more.
     END WHILE
7030 PAUSE 0 : PAUSE 0
7040 CLS
7060 RETURN

7100 PRINT
7110 PRINT S_OTHER_PLAY
7120 Z$=INPUT(1)
7130 if Z$<>"N" AND Z$<>"n" THEN GOTO 10 : END IF
7140 NEW

